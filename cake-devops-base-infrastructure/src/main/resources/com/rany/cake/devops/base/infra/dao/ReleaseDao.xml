<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rany.cake.devops.base.infra.dao.ReleaseDao">
    <resultMap id="BaseResultMap" type="com.rany.cake.devops.base.infra.po.ReleasePO">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="app_id" jdbcType="BIGINT" property="appId"/>
        <result column="release_no" jdbcType="VARCHAR" property="releaseNo"/>
        <result column="approval_id" jdbcType="BIGINT" property="approvalId"/>
        <result column="release_date" jdbcType="TIMESTAMP" property="releaseDate"/>
        <result column="release_branch" jdbcType="VARCHAR" property="releaseBranch"/>
        <result column="release_commit_id" jdbcType="VARCHAR" property="releaseCommitId"/>
        <result column="release_version" jdbcType="VARCHAR" property="releaseVersion"/>
        <result column="env_name" jdbcType="VARCHAR" property="envName"/>
        <result column="release_status" jdbcType="VARCHAR" property="releaseStatus"/>
        <result column="rollback" jdbcType="VARCHAR" property="rollback"/>
        <result column="rollback_id" jdbcType="BIGINT" property="rollbackId"/>
        <result column="is_deleted" jdbcType="VARCHAR" property="isDeleted"/>
        <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate"/>
        <result column="gmt_modified" jdbcType="TIMESTAMP" property="gmtModified"/>
        <result column="creator" jdbcType="VARCHAR" property="creator"/>
        <result column="modifier" jdbcType="VARCHAR" property="modifier"/>
    </resultMap>
    <sql id="Base_Column_List">
        id
        , app_id, release_no, approval_id, release_date, release_branch, release_commit_id,
        release_version, env_name, release_status, rollback, rollback_id, is_deleted, gmt_create,
        gmt_modified, creator, modifier
    </sql>

    <insert id="save" parameterType="com.rany.cake.devops.base.domain.aggregate.Release">

        insert into release (id, app_id, release_no,
                             approval_id, release_date, release_branch,
                             release_commit_id, release_version, env_name,
                             release_status, rollback, rollback_id,
                             is_deleted, gmt_create, gmt_modified,
                             creator, modifier)
        values (#{id.id,jdbcType=BIGINT}, #{appId.id,jdbcType=BIGINT}, #{releaseNo,jdbcType=VARCHAR},
                #{approvalId.id,jdbcType=BIGINT}, #{releaseDate,jdbcType=TIMESTAMP}, #{releaseBranch,jdbcType=VARCHAR},
                #{releaseCommitId,jdbcType=VARCHAR}, #{releaseVersion,jdbcType=VARCHAR}, #{envName,jdbcType=VARCHAR},
                #{releaseStatus,jdbcType=VARCHAR}, #{rollback,jdbcType=VARCHAR}, #{rollbackId.id,jdbcType=BIGINT},
                #{isDeleted,jdbcType=VARCHAR}, #{gmtCreate,jdbcType=TIMESTAMP}, #{gmtModified,jdbcType=TIMESTAMP},
                #{creator,jdbcType=VARCHAR}, #{modifier,jdbcType=VARCHAR})
    </insert>

    <update id="update" parameterType="com.rany.cake.devops.base.domain.aggregate.Release">
        update release
        <set>
            <if test="appId != null">
                app_id = #{appId.id,jdbcType=BIGINT},
            </if>
            <if test="releaseNo != null">
                release_no = #{releaseNo,jdbcType=VARCHAR},
            </if>
            <if test="approvalId != null">
                approval_id = #{approvalId.id,jdbcType=BIGINT},
            </if>
            <if test="releaseDate != null">
                release_date = #{releaseDate,jdbcType=TIMESTAMP},
            </if>
            <if test="releaseBranch != null">
                release_branch = #{releaseBranch,jdbcType=VARCHAR},
            </if>
            <if test="releaseCommitId != null">
                release_commit_id = #{releaseCommitId,jdbcType=VARCHAR},
            </if>
            <if test="releaseVersion != null">
                release_version = #{releaseVersion,jdbcType=VARCHAR},
            </if>
            <if test="envName != null">
                env_name = #{envName,jdbcType=VARCHAR},
            </if>
            <if test="releaseStatus != null">
                release_status = #{releaseStatus,jdbcType=VARCHAR},
            </if>
            <if test="rollback != null">
                rollback = #{rollback,jdbcType=VARCHAR},
            </if>
            <if test="rollbackId != null">
                rollback_id = #{rollbackId.id,jdbcType=BIGINT},
            </if>
            <if test="isDeleted != null">
                is_deleted = #{isDeleted,jdbcType=VARCHAR},
            </if>
            <if test="gmtCreate != null">
                gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
            </if>
            <if test="gmtModified != null">
                gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
            </if>
            <if test="creator != null">
                creator = #{creator,jdbcType=VARCHAR},
            </if>
            <if test="modifier != null">
                modifier = #{modifier,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id.id,jdbcType=BIGINT}
    </update>

</mapper>