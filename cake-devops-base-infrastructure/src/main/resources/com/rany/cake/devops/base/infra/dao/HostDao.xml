<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rany.cake.devops.base.infra.dao.HostDao">
    <resultMap id="BaseResultMap" type="com.rany.cake.devops.base.infra.po.HostPO">

        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="host_id" jdbcType="VARCHAR" property="hostId"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="host_name" jdbcType="VARCHAR" property="hostName"/>
        <result column="server_addr" jdbcType="VARCHAR" property="serverAddr"/>
        <result column="port" jdbcType="INTEGER" property="port"/>
        <result column="auth_type" jdbcType="INTEGER" property="authType"/>
        <result column="username" jdbcType="VARCHAR" property="username"/>
        <result column="pwd" jdbcType="VARCHAR" property="pwd"/>
        <result column="status" jdbcType="VARCHAR" property="status"/>
        <result column="is_deleted" jdbcType="VARCHAR" property="isDeleted"/>
        <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate"/>
        <result column="gmt_modified" jdbcType="TIMESTAMP" property="gmtModified"/>
        <result column="desc" jdbcType="VARCHAR" property="desc"/>
        <result column="verified" jdbcType="CHAR" property="verified"/>
        <result column="creator" jdbcType="VARCHAR" property="creator"/>
        <result column="modifier" jdbcType="VARCHAR" property="modifier"/>
        <result column="key_id" jdbcType="BIGINT" property="keyId"/>
        <result column="proxy_id" jdbcType="BIGINT" property="proxyId"/>
    </resultMap>

    <sql id="Base_Column_List">

        id
        ,host_id
        , name, host_name, auth_type,
        server_addr, port, username, pwd, status, is_deleted, gmt_create, gmt_modified,
        `desc`, verified, creator, modifier, key_id, proxy_id
    </sql>


    <select id="selectByPrimaryKeyList" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from host
        where is_deleted = '0' and
        host_id in
        <foreach collection="hostIds" index="index" item="hostId" open="(" separator="," close=")">
            #{hostId}
        </foreach>
    </select>

    <insert id="save" parameterType="com.rany.cake.devops.base.domain.aggregate.Host">

        insert into host (host_id, name, host_name, server_addr,
                          port, auth_type, username, pwd, status,
                          is_deleted, gmt_create, gmt_modified,
                          `desc`, verified, creator,
                          modifier, key_id, proxy_id)
        values (#{hostId.hostId},
                #{name,jdbcType=VARCHAR},
                #{hostName,jdbcType=VARCHAR},
                #{serverAddr},
                #{port,jdbcType=INTEGER},
                #{authType},
                #{username,jdbcType=VARCHAR},
                #{pwd},
                #{status,jdbcType=VARCHAR},
                #{isDeleted,jdbcType=VARCHAR},
                #{gmtCreate,jdbcType=TIMESTAMP},
                #{gmtModified,jdbcType=TIMESTAMP},
                #{desc,jdbcType=VARCHAR},
                #{verified,jdbcType=TINYINT},
                #{creator,jdbcType=VARCHAR},
                #{modifier,jdbcType=VARCHAR},
                #{keyId},
                #{proxyId})
    </insert>

    <update id="update" parameterType="com.rany.cake.devops.base.domain.aggregate.Host">
        update host
        <set>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="hostName != null">
                host_name = #{hostName,jdbcType=VARCHAR},
            </if>
            <if test="serverAddr != null">
                server_addr = #{serverAddr},
            </if>
            <if test="port != null">
                port = #{port,jdbcType=INTEGER},
            </if>
            <if test="authType != null">
                auth_type = #{authType},
            </if>
            <if test="username != null">
                username = #{username,jdbcType=VARCHAR},
            </if>
            <if test="pwd != null">
                pwd = #{pwd},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=VARCHAR},
            </if>
            <if test="isDeleted != null">
                is_deleted = #{isDeleted,jdbcType=VARCHAR},
            </if>
            <if test="gmtCreate != null">
                gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
            </if>
            <if test="gmtModified != null">
                gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
            </if>
            <if test="desc != null">
                `desc` = #{desc,jdbcType=VARCHAR},
            </if>
            <if test="verified != null">
                verified = #{verified,jdbcType=TINYINT},
            </if>
            <if test="creator != null">
                creator = #{creator,jdbcType=VARCHAR},
            </if>
            <if test="modifier != null">
                modifier = #{modifier,jdbcType=VARCHAR},
            </if>
            <if test="keyId != null">
                key_id = #{keyId},
            </if>
            <if test="proxyId != null">
                proxy_id = #{proxyId},
            </if>
        </set>
        where host_id = #{hostId.hostId}
    </update>

    <select id="selectByHostId" parameterType="java.lang.String" resultMap="BaseResultMap">

        select
        <include refid="Base_Column_List"/>
        from host
        where host_id = #{hostId}
    </select>

    <select id="queryMonitorHost" resultMap="BaseResultMap"
            parameterType="com.rany.cake.devops.base.domain.repository.param.HostMonitorPageQueryParam">
        select
        h.*
        from host h
        left join host_monitor m on m.host_id = h.host_id
        <where>
            h.is_deleted = '0'
            <if test="hostName != null and hostName != ''">
                and h.host_name like ('%', #{hostName},'%')
            </if>
            <if test="serverAddr != null and serverAddr != ''">
                and h.server_addr like ('%', #{serverAddr},'%')
            </if>
        </where>
    </select>


    <select id="queryHost" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from host
        <where>
            is_deleted = '0'
            <if test="name != null and name != ''">
                and name like concat("%", #{name}, "%")
            </if>
            <if test="hostName != null and hostName != ''">
                and host_name like concat("%", #{hostName}, "%")
            </if>
            <if test="hostGroupsIds !=null and hostGroupsIds.size() > 0">
                and host_id in (
                select g.host_id from group_host g
                where g.is_deleted = '0' and
                g.group_id in
                <foreach collection="hostGroupsIds" index="index" item="groupId" open="(" separator="," close=")">
                    #{groupId}
                </foreach>
                )
            </if>
        </where>
        order by gmt_modified desc
    </select>
</mapper>