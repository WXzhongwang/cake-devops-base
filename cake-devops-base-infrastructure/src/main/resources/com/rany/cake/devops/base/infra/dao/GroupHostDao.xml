<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rany.cake.devops.base.infra.dao.GroupHostDao">
    <resultMap id="BaseResultMap" type="com.rany.cake.devops.base.infra.po.GroupHostPO">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="group_id" jdbcType="VARCHAR" property="groupId"/>
        <result column="host_id" jdbcType="VARCHAR" property="hostId"/>
        <result column="is_deleted" jdbcType="VARCHAR" property="isDeleted"/>
        <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate"/>
        <result column="gmt_modified" jdbcType="TIMESTAMP" property="gmtModified"/>
        <result column="creator" jdbcType="VARCHAR" property="creator"/>
        <result column="modifier" jdbcType="VARCHAR" property="modifier"/>
    </resultMap>
    <sql id="Base_Column_List">
        id
        , group_id, host_id, is_deleted, gmt_create, gmt_modified, creator, modifier
    </sql>

    <select id="selectByGroupIds" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from group_host
        where is_deleted = '0' and
        group_id in
        <foreach collection="groupIds" index="index" item="groupId" open="(" separator="," close=")">
            #{groupId}
        </foreach>
    </select>

    <insert id="save" parameterType="com.rany.cake.devops.base.domain.entity.GroupHost">
        insert into group_host (id, group_id, host_id,
                                is_deleted, gmt_create, gmt_modified,
                                creator, modifier)
        values (#{id,jdbcType=BIGINT}, #{groupId}, #{hostId},
                #{isDeleted,jdbcType=VARCHAR}, #{gmtCreate,jdbcType=TIMESTAMP}, #{gmtModified,jdbcType=TIMESTAMP},
                #{creator,jdbcType=VARCHAR}, #{modifier,jdbcType=VARCHAR})
    </insert>

    <update id="update" parameterType="com.rany.cake.devops.base.domain.entity.GroupHost">
        update group_host
        <set>
            <if test="groupId != null">
                group_id = #{groupId},
            </if>
            <if test="hostId != null">
                host_id = #{hostId},
            </if>
            <if test="isDeleted != null">
                is_deleted = #{isDeleted,jdbcType=VARCHAR},
            </if>
            <if test="gmtCreate != null">
                gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
            </if>
            <if test="gmtModified != null">
                gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
            </if>
            <if test="creator != null">
                creator = #{creator,jdbcType=VARCHAR},
            </if>
            <if test="modifier != null">
                modifier = #{modifier,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
</mapper>